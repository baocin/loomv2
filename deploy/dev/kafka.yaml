# Basic Kafka setup for development
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: loom-dev
  labels:
    app: zookeeper
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: zookeeper-dev
    app.kubernetes.io/version: "7.4.0"
    app.kubernetes.io/component: zookeeper
    app.kubernetes.io/part-of: loom
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/instance: zookeeper-dev
  template:
    metadata:
      labels:
        app: zookeeper
        app.kubernetes.io/name: zookeeper
        app.kubernetes.io/instance: zookeeper-dev
        app.kubernetes.io/version: "7.4.0"
        app.kubernetes.io/component: zookeeper
        app.kubernetes.io/part-of: loom
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.4.0
        ports:
        - containerPort: 2181
          name: client
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        - name: ZOOKEEPER_SYNC_LIMIT
          value: "2"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper/data
        - name: zookeeper-logs
          mountPath: /var/lib/zookeeper/log
      volumes:
      - name: zookeeper-data
        emptyDir: {}
      - name: zookeeper-logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: loom-dev
  labels:
    app: zookeeper
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: zookeeper-dev
    app.kubernetes.io/component: zookeeper
    app.kubernetes.io/part-of: loom
spec:
  selector:
    app: zookeeper
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: zookeeper-dev
  ports:
  - port: 2181
    targetPort: 2181
    name: client
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: loom-dev
  labels:
    app: kafka
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: kafka-dev
    app.kubernetes.io/version: "7.4.0"
    app.kubernetes.io/component: broker
    app.kubernetes.io/part-of: loom
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: kafka-dev
  template:
    metadata:
      labels:
        app: kafka
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: kafka-dev
        app.kubernetes.io/version: "7.4.0"
        app.kubernetes.io/component: broker
        app.kubernetes.io/part-of: loom
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.4.0
        ports:
        - containerPort: 9092
          name: internal
        - containerPort: 29092
          name: external
        - containerPort: 9999
          name: jmx
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_NUM_PARTITIONS
          value: "3"
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "168"
        - name: KAFKA_LOG_SEGMENT_BYTES
          value: "1073741824"
        - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
          value: "300000"
        - name: KAFKA_COMPRESSION_TYPE
          value: "lz4"
        - name: KAFKA_JMX_PORT
          value: "9999"
        - name: KAFKA_JMX_HOSTNAME
          value: "localhost"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
      volumes:
      - name: kafka-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: loom-dev
  labels:
    app: kafka
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: kafka-dev
    app.kubernetes.io/component: broker
    app.kubernetes.io/part-of: loom
spec:
  selector:
    app: kafka
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: kafka-dev
  ports:
  - name: internal
    port: 9092
    targetPort: 9092
  - name: external
    port: 29092
    targetPort: 29092
    nodePort: 32092
  - name: jmx
    port: 9999
    targetPort: 9999
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: loom-dev
  labels:
    app: kafka
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: kafka-dev
    app.kubernetes.io/component: broker
    app.kubernetes.io/part-of: loom
spec:
  clusterIP: None
  selector:
    app: kafka
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: kafka-dev
  ports:
  - name: internal
    port: 9092
    targetPort: 9092
