apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: loom-dev
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres-dev
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: loom
type: Opaque
stringData:
  POSTGRES_PASSWORD: loom
  POSTGRES_USER: loom
  POSTGRES_DB: loom
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: loom-dev
  labels:
    app: postgres
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres-dev
    app.kubernetes.io/version: "15"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: loom
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: postgres-dev
  template:
    metadata:
      labels:
        app: postgres
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: postgres-dev
        app.kubernetes.io/version: "15"
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: loom
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
      containers:
        - name: postgres
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 999
            capabilities:
              drop:
                - ALL
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
              readOnly: true
      volumes:
        - name: postgres-data
          emptyDir: {}
        - name: postgres-config
          configMap:
            name: postgres-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: loom-dev
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres-dev
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: loom
data:
  postgresql.conf: |
    # PostgreSQL configuration for development
    listen_addresses = '*'
    port = 5432
    max_connections = 100
    shared_buffers = 128MB
    effective_cache_size = 512MB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    
    # Logging
    log_destination = 'stderr'
    logging_collector = off
    log_statement = 'none'
    log_duration = off
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    
    # Development settings
    fsync = off
    synchronous_commit = off
    full_page_writes = off
    checkpoint_segments = 32
    checkpoint_completion_target = 0.9
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: loom-dev
  labels:
    app: postgres
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres-dev
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: loom
spec:
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: postgres
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres-dev
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-headless
  namespace: loom-dev
  labels:
    app: postgres
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres-dev
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: loom
spec:
  clusterIP: None
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: postgres
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres-dev
