apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ingestion-api.fullname" . }}
  labels:
    {{- include "ingestion-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ingestion-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.configMap.enabled }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ingestion-api.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ingestion-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.port }}
              protocol: TCP
          env:
            - name: LOOM_HOST
              value: {{ .Values.config.host | quote }}
            - name: LOOM_PORT
              value: {{ .Values.config.port | quote }}
            - name: LOOM_LOG_LEVEL
              value: {{ .Values.config.logLevel | quote }}
            - name: LOOM_ENVIRONMENT
              value: {{ .Values.config.environment | quote }}
            - name: LOOM_KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.config.kafka.bootstrapServers | quote }}
            - name: LOOM_KAFKA_AUDIO_TOPIC
              value: {{ .Values.config.kafka.audioTopic | quote }}
            - name: LOOM_KAFKA_SENSOR_TOPIC
              value: {{ .Values.config.kafka.sensorTopic | quote }}
            - name: LOOM_KAFKA_COMPRESSION_TYPE
              value: {{ .Values.config.kafka.compressionType | quote }}
            - name: LOOM_KAFKA_BATCH_SIZE
              value: {{ .Values.config.kafka.batchSize | quote }}
            - name: LOOM_KAFKA_LINGER_MS
              value: {{ .Values.config.kafka.lingerMs | quote }}
            - name: LOOM_KAFKA_RETRY_BACKOFF_MS
              value: {{ .Values.config.kafka.retryBackoffMs | quote }}
            - name: LOOM_KAFKA_MAX_RETRIES
              value: {{ .Values.config.kafka.maxRetries | quote }}
            - name: LOOM_METRICS_ENABLED
              value: {{ .Values.config.metricsEnabled | quote }}
            - name: LOOM_ENABLE_CORS
              value: {{ .Values.config.enableCors | quote }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /app/data
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .Values.sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "ingestion-api.fullname" . }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
