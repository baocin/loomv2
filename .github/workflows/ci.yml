name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: pre-commit/action@v3.0.1

  test-ingestion-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/ingestion-api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -r requirements-locked.txt
          uv pip install -e ".[dev]"
      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          pytest tests/unit/ --cov=app --cov-report=xml --cov-report=term-missing --cov-fail-under=80
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: services/ingestion-api/coverage.xml
          flags: ingestion-api
          name: ingestion-api-coverage

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install security tools
        run: |
          pip install bandit[toml] safety
      - name: Run bandit security scan
        run: |
          bandit -r services/ -f json -o bandit-report.json || true
          bandit -r services/ -f txt
      - name: Run safety check
        run: |
          safety check --json || true

  helm-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.12.0'
      - name: Lint Helm charts
        run: |
          helm lint deploy/helm/*/
      - name: Template Helm charts
        run: |
          for chart in deploy/helm/*/; do
            echo "Templating $chart"
            helm template test "$chart" --dry-run
          done

  build-images:
    runs-on: ubuntu-latest
    needs: [pre-commit, test-ingestion-api, security-scan, helm-lint]
    strategy:
      matrix:
        service: [ingestion-api]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: services/${{ matrix.service }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  integration-test:
    runs-on: ubuntu-latest
    needs: [build-images]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Compose
        run: |
          docker compose version
      - name: Run integration tests
        run: |
          # TODO: Add integration test setup with testcontainers
          echo "Integration tests placeholder"
