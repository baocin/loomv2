# Loom v2 Development Environment Configuration
# Copy this file to .env and fill in your credentials

# =============================================================================
# Core Infrastructure Configuration
# =============================================================================
# PostgreSQL/TimescaleDB Configuration
POSTGRES_DB=loom
POSTGRES_USER=loom
POSTGRES_PASSWORD=loom
LOOM_DATABASE_URL=postgresql://loom:loom@postgres:5432/loom

# Kafka Configuration
KAFKA_BOOTSTRAP_SERVERS=kafka:29092
LOOM_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
KAFKA_TOPIC_PREFIX=""

# Global Configuration
LOG_LEVEL=INFO
LOOM_LOG_LEVEL=INFO
ENVIRONMENT=development
LOOM_ENVIRONMENT=development
TZ=UTC

# =============================================================================
# Ingestion API Configuration
# =============================================================================
LOOM_HOST=0.0.0.0
LOOM_PORT=8000
LOOM_CORS_ORIGINS=*

# =============================================================================
# AI Model Services Configuration
# =============================================================================

# Silero VAD (Voice Activity Detection)
LOOM_VAD_THRESHOLD=0.5
# Kafka topics for VAD service
LOOM_KAFKA_INPUT_TOPIC_VAD=device.audio.raw
LOOM_KAFKA_OUTPUT_TOPIC_VAD=media.audio.vad_filtered

# Parakeet TDT (Speech-to-Text)
LOOM_MODEL_DEVICE_PARAKEET=cpu  # Use 'cuda' for GPU support
# Kafka topics for Parakeet service
LOOM_KAFKA_INPUT_TOPIC_PARAKEET=media.audio.vad_filtered
LOOM_KAFKA_OUTPUT_TOPIC_PARAKEET=media.text.transcribed.words

# MiniCPM Vision (Vision-Language Model)
LOOM_MODEL_DEVICE_MINICPM=cpu  # Use 'cuda' for GPU support
# Kafka topics for MiniCPM service (JSON array format)
LOOM_KAFKA_INPUT_TOPICS_MINICPM=["device.image.camera.raw", "device.video.screen.raw"]
LOOM_KAFKA_OUTPUT_TOPIC_MINICPM=media.image.analysis.minicpm_results

# BUD-E Emotion (Audio Emotion Recognition)
LOOM_MODEL_DEVICE_BUDE=cpu  # Use 'cuda' for GPU support
# Kafka topics for BUD-E service
LOOM_KAFKA_INPUT_TOPIC_BUDE=media.audio.vad_filtered
LOOM_KAFKA_OUTPUT_TOPIC_BUDE=analysis.audio.emotion_results

# Face Emotion (Image Emotion Recognition)
LOOM_MODEL_DEVICE_FACE=cpu  # Use 'cuda' for GPU support
# Kafka topics for Face Emotion service
LOOM_KAFKA_INPUT_TOPIC_FACE=media.image.analysis.minicpm_results
LOOM_KAFKA_OUTPUT_TOPIC_FACE=analysis.image.emotion_results

# =============================================================================
# Data Fetcher Services Configuration
# =============================================================================

# X/Twitter Fetcher Configuration
# Browser-based scraper for X.com (formerly Twitter)
X_USERNAME=your-x-username
X_PASSWORD=your-x-password
X_PHONE_NUMBER=+1234567890  # Optional, may be required for some accounts
LOOM_KAFKA_OUTPUT_TOPIC_X=external.twitter.liked.raw
LOOM_KAFKA_URL_TOPIC_X=task.url.ingest
LOOM_SEND_TO_URL_PROCESSOR_X=true
LOOM_FETCH_INTERVAL_HOURS_X=0.5  # Every 30 minutes
LOOM_RUN_ON_STARTUP_X=true

# Email Fetcher Configuration
# Supports multiple IMAP accounts (up to 10)
# All emails go to a single shared topic: external.email.events.raw
LOOM_KAFKA_OUTPUT_TOPIC_EMAIL=external.email.events.raw
LOOM_EMAIL_FETCH_INTERVAL_MINUTES=5
LOOM_EMAIL_RUN_ON_STARTUP=true
LOOM_EMAIL_SEARCH_CRITERIA=UNSEEN  # UNSEEN, ALL, or custom IMAP search
LOOM_EMAIL_MAX_FETCH_PER_ACCOUNT=100

# Email Account 1 (e.g., Gmail)
LOOM_EMAIL_1=your-email@gmail.com
LOOM_EMAIL_PASSWORD_1=your-gmail-app-password
LOOM_EMAIL_IMAP_SERVER_1=imap.gmail.com
LOOM_EMAIL_PORT_1=993
LOOM_EMAIL_NAME_1=Gmail
# LOOM_EMAIL_DISABLED_1=false

# Email Account 2 (e.g., Fastmail)
LOOM_EMAIL_2=your-email@fastmail.com
LOOM_EMAIL_PASSWORD_2=your-fastmail-password
LOOM_EMAIL_IMAP_SERVER_2=imap.fastmail.com
LOOM_EMAIL_PORT_2=993
LOOM_EMAIL_NAME_2=Fastmail
# LOOM_EMAIL_DISABLED_2=false

# Email Account 3 (e.g., Outlook)
# LOOM_EMAIL_3=your-email@outlook.com
# LOOM_EMAIL_PASSWORD_3=your-outlook-password
# LOOM_EMAIL_IMAP_SERVER_3=outlook.office365.com
# LOOM_EMAIL_PORT_3=993
# LOOM_EMAIL_NAME_3=Outlook
# LOOM_EMAIL_DISABLED_3=false

# Calendar Fetcher Configuration (CalDAV)
# Supports multiple CalDAV accounts (up to 10)
LOOM_KAFKA_OUTPUT_TOPIC_CALENDAR=external.calendar.events.raw
LOOM_CALENDAR_FETCH_INTERVAL_MINUTES=10
LOOM_CALENDAR_RUN_ON_STARTUP=true
LOOM_CALENDAR_DAYS_PAST=7
LOOM_CALENDAR_DAYS_FUTURE=30
LOOM_CALENDAR_ENABLE_GPS_LOOKUP=true
LOOM_NOMINATIM_BASE_URL=http://localhost:8080

# CalDAV Account 1 (e.g., Google Calendar via CalDAV)
LOOM_CALDAV_URL_1=https://www.google.com/calendar/dav/your-email@gmail.com/events/
LOOM_CALDAV_USERNAME_1=your-email@gmail.com
LOOM_CALDAV_PASSWORD_1=your-app-specific-password
LOOM_CALDAV_NAME_1=Google Calendar
# LOOM_CALDAV_DISABLED_1=false

# CalDAV Account 2 (e.g., Nextcloud)
# LOOM_CALDAV_URL_2=https://nextcloud.example.com/remote.php/dav/calendars/username/personal/
# LOOM_CALDAV_USERNAME_2=your-username
# LOOM_CALDAV_PASSWORD_2=your-password
# LOOM_CALDAV_NAME_2=Nextcloud
# LOOM_CALDAV_DISABLED_2=false

# HackerNews Fetcher Configuration
LOOM_KAFKA_OUTPUT_TOPIC_HACKERNEWS=external.hackernews.favorites.raw
LOOM_HACKERNEWS_FETCH_INTERVAL_MINUTES=15
LOOM_HACKERNEWS_RUN_ON_STARTUP=true
LOOM_HACKERNEWS_USERNAME=your-hackernews-username
LOOM_HACKERNEWS_PASSWORD=your-hackernews-password  # Optional, for private favorites
LOOM_HACKERNEWS_MAX_ITEMS=100
LOOM_HACKERNEWS_FETCH_TYPE=favorites  # favorites or submissions
LOOM_HACKERNEWS_USE_BROWSER=false  # Use browser automation if true
LOOM_HACKERNEWS_RATE_LIMIT_SECONDS=0.5

# X.com (Twitter) Fetcher
# Requires authentication credentials for accessing liked tweets
X_USERNAME=your-x-username
X_PASSWORD=your-x-password
X_PHONE_NUMBER=  # Optional: Required for some accounts with additional security
LOOM_X_FETCH_INTERVAL_MINUTES=30
LOOM_X_RUN_ON_STARTUP=true

# =============================================================================
# Processing Services Configuration
# =============================================================================

# HackerNews URL Processor
LOOM_KAFKA_INPUT_TOPIC_HACKERNEWS_PROCESSOR=external.hackernews.favorites.raw
LOOM_KAFKA_OUTPUT_TOPIC_HACKERNEWS_PROCESSOR=task.url.processed.hackernews_archived
LOOM_KAFKA_CONSUMER_GROUP_HACKERNEWS=hackernews-url-processor
LOOM_URL_PROCESSOR_ENABLE_SCREENSHOTS_HACKERNEWS=true
LOOM_URL_PROCESSOR_PDF_MAX_PAGES_HACKERNEWS=50
LOOM_URL_PROCESSOR_TEXT_MAX_CHARS_HACKERNEWS=100000
LOOM_URL_PROCESSOR_REQUEST_TIMEOUT_HACKERNEWS=30
LOOM_URL_PROCESSOR_SCREENSHOT_TIMEOUT_HACKERNEWS=30

# X URL Processor
# Processes X.com URLs from the generic task.url.ingest topic
LOOM_KAFKA_INPUT_TOPIC_X_PROCESSOR=task.url.ingest
LOOM_KAFKA_OUTPUT_TOPIC_X_PROCESSOR=task.url.processed.twitter_archived
LOOM_KAFKA_CONSUMER_GROUP_X=x-url-processor

# Kafka to Database Consumer
# Consumes from all data topics and persists to TimescaleDB
LOOM_KAFKA_CONSUMER_TOPICS=["device.audio.raw", "device.sensor.gps.raw", "device.sensor.accelerometer.raw", "media.text.transcribed.words", "analysis.audio.emotion_results", "analysis.image.emotion_results", "external.email.events.raw", "external.calendar.events.raw", "external.twitter.liked.raw", "external.hackernews.favorites.raw", "task.url.processed.twitter_archived", "task.url.processed.hackernews_archived"]

# =============================================================================
# Scheduled Consumers Configuration
# =============================================================================
LOOM_DEVICE_ID_SCHEDULED=local-dev-scheduled-consumers
LOOM_EMAIL_CHECK_INTERVAL_MINUTES=30
LOOM_SOCIAL_MEDIA_CHECK_INTERVAL_MINUTES=60
LOOM_WEB_ACTIVITY_CHECK_INTERVAL_MINUTES=15

# =============================================================================
# Pipeline Monitor Configuration
# =============================================================================
PORT_MONITOR_API=8080
LOOM_DATABASE_HOST=postgres
LOOM_DATABASE_PORT=5432
LOOM_DATABASE_NAME=loom
LOOM_DATABASE_USER=loom
LOOM_DATABASE_PASSWORD=loom
CORS_ORIGIN=http://localhost:3000
NODE_ENV=development

# Pipeline Monitor Frontend
VITE_API_URL=http://localhost:8082

# =============================================================================
# Service Ports Configuration
# =============================================================================
# Main services
PORT_INGESTION_API=8000
PORT_PIPELINE_MONITOR_API=8082
PORT_PIPELINE_MONITOR=3000
PORT_KAFKA_UI=8081
PORT_POSTGRES=5432
PORT_KAFKA=9092

# AI service ports
PORT_SILERO_VAD=8001
PORT_PARAKEET_TDT=8002
PORT_MINICPM_VISION=8003
PORT_BUD_E_EMOTION=8004
PORT_FACE_EMOTION=8005

# =============================================================================
# Device IDs for Services
# =============================================================================
LOOM_DEVICE_ID_HACKERNEWS=local-dev-hackernews-fetcher
LOOM_DEVICE_ID_CALENDAR=local-dev-calendar-fetcher
LOOM_DEVICE_ID_X=local-dev-x-likes-fetcher
# Note: Gmail and Fastmail device IDs are defined in their respective sections above

# =============================================================================
# Model Configuration & Optimization
# =============================================================================
# Model cache directory (shared across AI services)
MODEL_CACHE_DIR=./models

# GPU/CPU device selection for AI models
# Options: cpu, cuda, auto
AI_DEVICE_PREFERENCE=cpu

# Memory limits for AI services (Docker deploy resources)
MEMORY_LIMIT_MINICPM=8G
MEMORY_RESERVATION_MINICPM=4G
MEMORY_LIMIT_ONEFILELLM=4G
MEMORY_RESERVATION_ONEFILELLM=2G

# =============================================================================
# OneFileLLM Configuration (Currently disabled)
# =============================================================================
# KAFKA_TOPIC_GITHUB_INGEST=task.github.ingest
# KAFKA_TOPIC_DOCUMENT_INGEST=task.document.ingest
# KAFKA_TOPIC_GITHUB_PARSED=processed.github.parsed
# KAFKA_TOPIC_DOCUMENT_PARSED=processed.document.parsed
# ONEFILELLM_HOST=0.0.0.0
# ONEFILELLM_PORT=8080
# MAX_FILE_SIZE_MB=100
# MAX_REPO_FILES=1000
# GITHUB_CLONE_TIMEOUT=300
# PROCESSING_TIMEOUT=600

# =============================================================================
# Development & Debugging Configuration
# =============================================================================
# Container restart policies
RESTART_POLICY=unless-stopped

# Health check intervals
HEALTHCHECK_INTERVAL=30s
HEALTHCHECK_TIMEOUT=10s
HEALTHCHECK_RETRIES=5
HEALTHCHECK_START_PERIOD=60s

# Debug mode for services
DEBUG_MODE=false
VERBOSE_LOGGING=false

# =============================================================================
# Security & Authentication Configuration
# =============================================================================
# API Keys and tokens (add your own)
# OPENAI_API_KEY=your-openai-api-key
# ANTHROPIC_API_KEY=your-anthropic-api-key
# HUGGINGFACE_TOKEN=your-huggingface-token

# JWT secrets (generate secure random strings)
# JWT_SECRET=your-super-secure-jwt-secret-key
# API_SECRET_KEY=your-super-secure-api-secret-key

# =============================================================================
# External API Configuration
# =============================================================================
# Rate limiting for external APIs
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# Timeout configurations
HTTP_TIMEOUT_SECONDS=30
KAFKA_TIMEOUT_SECONDS=10
DATABASE_TIMEOUT_SECONDS=30

# =============================================================================
# Monitoring & Observability
# =============================================================================
# Prometheus metrics
ENABLE_METRICS=true
METRICS_PORT=9090

# Jaeger tracing
ENABLE_TRACING=true
JAEGER_ENDPOINT=http://localhost:14268/api/traces

# Structured logging
LOG_FORMAT=json
LOG_OUTPUT=stdout
